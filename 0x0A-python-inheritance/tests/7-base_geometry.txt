The ``7-base_geometry`` module
============================

Using ``BaseGeometry Class``
---------------------

Use the MyList Class
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Create an instance of MyList
	>>> bg = BaseGeometry()

Test 0 - Trying to print the area
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	      ...
	Exception: area() is not implemented

Test 1 - Valid Input
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)

Test 2 - Invalid valiue (string)
	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	TypeError: name must be an integer

Test 3 - Invalid value (Value is 0)
	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

Test 4 - Invalid value (less than 0)
	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	ValueError: distance must be greater than 0

Test 5 - Invalid value (boolean)
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", True)
	Traceback (most recent call last):
	TypeError: name must be an integer

Test 6 - Passing one argument to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

Test 7 - Integer_validator with no arguments
	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


Test 8 - Passing three arguments to integer_validator
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("name", 1, 2)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 4 were given


Test 9 - Passing one argument to area method
	>>> bg = BaseGeometry()
	>>> bg.area(5)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

Test 10 - Passing two arguments to area method
	>>> bg = BaseGeometry()
	>>> bg.area(5, 5)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 3 were given

Test 11 - Passing tuple to method
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", (4,))
	Traceback (most recent call last):
	TypeError: age must be an integer


Test 12 - Passing list to method
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", [3])
	Traceback (most recent call last):
	TypeError: age must be an integer


Test 13 - Passing dict to method
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", {3, 4})
	Traceback (most recent call last):
	TypeError: age must be an integer


Test 14 - Passing None to method
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("age", None)
	Traceback (most recent call last):
	      ...
	TypeError: age must be an integer
