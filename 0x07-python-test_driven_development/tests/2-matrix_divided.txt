The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing matrix_divided function
	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Testing a matrix with lists on numbers
	>>> matrix = [
	... [1, 2, 3],
	... [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing a matrix with lists of different lengths
	>>> matrix = [
	... [1, 2, 3],
	... [4, 5, 6, 7, 8, 9, 10]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Testing a division by zero
	>>> matrix = [
	... [1, 2, 3],
	... [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

Testing a matrix with different list types
	>>> matrix = [
	... ['1', '2', '3'],
	... [4, 5, 6]
	... ]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing an empty list
	>>> matrix = []
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats
